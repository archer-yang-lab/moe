library(HDtweedie)
examples(HDtweedie)
example(HDtweedie)
m2
auto
head(data)
head(auto)
crossprod
crossprod(1:3,1:3)
5*15,000
5*15000
rnorm(100, 0, 10)
a = rnorm(100, 0, 10)
a
a = rnorm(10000, 0, 10)
a = rnorm(1000000, 0, 10)
hist(a)
5210.87/7
0.05/(0.05+0.009)
17/1.5
2/1.5
0.5-0.4082
pnorm
pnorm(17,15,1.5,lower.tail=F)
1-(1-0.0918)^20-20*0.0918*(1-0.0918)
(1-0.0918)^20
1-(1-0.0918)^20-20*0.0918*(1-0.0918)^19
pnorm(1515,1500,sqrt(15000),lower.tail=F)
15/sqrt(15000)
0.5-0.1224
0.5-0.01224
0.5-0.0478
300*5/11
300*(5/11)*(1-5/11)
-6/sqrt(74.38)
pnorm(130,136,74.38,lower.tail=F)
20 + 36*20/40 + 38 * 60 /60
20 + 38 * 80 /60
library(mgcv)
require(mgcv)
dat <- gamSim(3,n=400)
b<-gam(y ~ s(x2,by=x1),data=dat)
dat <- gamSim(4)
dat
s(x2,by=fac)
library(KERE)
N <- 200#
X1 <- runif(N)#
X2 <- 2*runif(N)#
X3 <- 3*runif(N)#
SNR <- 10 #
Y <- X1**1.5 + 2 * (X2**.5) + X1*X3#
sigma <- sqrt(var(Y)/SNR)#
Y <- Y + X2*rnorm(N,0,sigma)#
X <- cbind(X1,X2,X3)
kern <- rbfdot(sigma=0.1)#
lambda <- exp(seq(log(0.5),log(0.01),len=10))#
m1 <- KERE(x=X, y=Y, kern=kern, lambda = lambda, omega = 0.5)
269.72/5
269.72/4
67.43/2
269.72-33.71
236.01/3
?pmax
pmin(5:1, pi)
load("/Users/yiyang/Dropbox/collaborator/Yanjia/FG/realdata/internel_model_ncvreg/adlasso_gamma2/colon_result.rda")
res
25+10+30+492+64+10
631/2
53.91+150.38+159.17
363.46/2
363.46/2+46
315.5-227.73
87.77+240
library(stat4)
library(stats4)
set.seed(680)n=10; p=5; sigma.star=1
qr.solve(t(X)%*%X) %*% t(X)%*%y
beta.star
y
qr.solve(crossprod(X)) %*% crossprod(X,y)
qr.solve(crossprod(X), crossprod(X,y))
set.seed(680)
q=min(c(n,p))
out=svd(X, nu=q, nv=q)
X=cbind(X[,1],X)
svd(X)
out=svd(X, nu=10, nv=10)
out=svd(X, nu=3, nv=3)
out
?svd
svd(X, nu=10, nv=3)
svd(X, nu=6, nv=3)
svd(X, nu=, nv=3)
X=matrix(rnorm(n*p), nrow=n, ncol=p)
svd(X, nu=,5 nv=3)
svd(X, nu=5 nv=3)
svd(X, nu=5, nv=3)
X
svd(X, nu=4, nv=4)
svd(X, nu=5, nv=\5)
svd(X, nu=5, nv=5)
set.seed(5701)n=5; p=10X=cbind(1, matrix(rnorm(n*(p-1)), nrow=n, ncol=(p-1)))beta.star=rep(1,p)y=X%*%beta.star + 1*rnorm(n)xbar=apply(X[,-1], 2, mean); ybar=mean(y)Xtilde=scale(X[,-1], center=xbar, scale=FALSE); ytilde=y-ybarq=min(c(n-1, p-1))out=svd(Xtilde, nu=q, nv=q)
lam.vec=10^seq(from=-8, to=8, by=0.5) beta.hat.matrix=matrix(NA, nrow=p, ncol=length(lam.vec)) for(j in 1:length(lam.vec)){  H=diag(out$d[1:q]/(out$d[1:q]^2 + lam.vec[j]))  bhatm1=out$v%*%H%*%t(out$u)%*%ytilde  bhat1=ybar - sum(xbar*bhatm1)  beta.hat.matrix[,j]=c(bhat1, bhatm1)}
lam.vec=10^seq(from=-8, to=8, by=0.5)
beta.hat.matrix=matrix(NA, nrow=p, ncol=length(lam.vec)) for(j in 1:length(lam.vec)){  H=diag(out$d[1:q]/(out$d[1:q]^2 + lam.vec[j]))  bhatm1=out$v%*%H%*%t(out$u)%*%ytilde  bhat1=ybar - sum(xbar*bhatm1)  beta.hat.matrix[,j]=c(bhat1, bhatm1)}
library(glmvsd)
example(glmvsd)
b_AIC
v1_BIC
getwd()
library(gglasso)
data(Bardet)
data(bardet)
load("/Users/yiyang/Dropbox/Teaching/MATH680/Topic4/note/Bardet.rda")
library(glmnet)#
load("Bardet.rda")
ls
ls()
library(e1071)
hamming.window(10)#
#
x<-rnorm(500)#
y<-stft(x, wtype="hamming.window")
plot(x)
plot(y)
145+85.83
library(moe)#
K = 3#
N = 3000#
p = 20 #
mu<-rep(0,p)#
covmat <- function(rho, p) {#
  rho^(abs(outer(seq(p), seq(p), "-")))#
}#
x <- scale(mvrnorm(N,mu=mu,Sigma=covmat(0,p)))#
nnb1 <- c(1,   2.5, -1,    0,   0,    0,    0, rep(0,p-6))#
nnb2 <- c(-1,  0,    0,    1.4, 2,    0,    0, rep(0,p-6))#
nnb3 <- c(2,   0,    0,    0,   0,    1.5, -1, rep(0,p-6))#
true_beta <- rbind(nnb1,nnb2,nnb3)#
nna1 <- c( 1,   0, 0, 2, 0, 0, -1.5, rep(0,p-6)) #
nna2 <- c(-1.5, 0, 0, -2, 0, 0,  2  , rep(0,p-6)) #
nna3 <- c(-2,   0, 0, 2, 0, 0, -2  , rep(0,p-6))#
true_alpha <- rbind(nna1,nna2,nna3)#
sig1 <- c(0.5, 1.5, 1)#
#
eta <- cbind(1,x)%*%t(true_beta)#
#
exp_mu <- exp(cbind(1,x)%*%t(true_alpha))#
rowsum_mu <- rowSums(exp_mu)#
pi <- exp_mu/rowsum_mu#
y <- 0#
for(i in 1:N){#
	u<-runif(1)#
	if(u <= pi[i,1]) y[i] <- rnorm(1, eta[i,1], sig1[1])#
	if((pi[i,1]<u) && (u<=(pi[i,1]+pi[i,2]))) y[i]<-rnorm(1,eta[i,2],sig1[2])#
	if((u>(pi[i,1]+pi[i,2]))) y[i]<-rnorm(1,eta[i,3],sig1[3])	#
}
setwd('/Users/yiyang/Dropbox/collaborator/MOE/code')
lam1 = c(0.08, 0.09)#
lam2 = c(0.009, 0.01)#
fit1 <- cv.moe(x=x, y=y, K=K, lam1 = lam1, lam2 = lam2, nfold = 3)
fit1
lam1
lam2
expand(lam1,lam2)
expand()
>expand()
?expand()
expand.grid(lam1,lam2)
lam_index <- expand.grid(lam1,lam2)
lam_index
seq.int(NROW(lam_index))
lam_index[i,1
]
lam_index[1,1]
lam_posi <- expand.grid(length(lam1),length(lam2))
lam_posi <- expand.grid(1:length(lam1),1:length(lam2))
setwd('/Users/yiyang/Dropbox/Research/prog_project/moe/R')
lam_posi
